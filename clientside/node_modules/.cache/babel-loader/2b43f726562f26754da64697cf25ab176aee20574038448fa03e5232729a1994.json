{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fadi_\\\\OneDrive\\\\School\\\\Concordia\\\\Courses\\\\Active\\\\SOEN487-WebServicesAndApplications\\\\Assignments\\\\a1_40183225\\\\clientside\\\\src\\\\components\\\\QueryButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueryButtons = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [title, setTitle] = useState('Students');\n  const [activeTab, setActiveTab] = useState('students'); // Track active tab\n  const [page, setPage] = useState(1); // Track pagination\n  const [totalPages, setTotalPages] = useState(1); // Store total pages\n\n  // Function to fetch data from API\n  const fetchData = async (endpoint, title, pageNumber = 1) => {\n    try {\n      console.log(`Fetching data from: ${endpoint}, Page: ${pageNumber}`);\n      const response = await axios.get(`http://localhost:3100/api/${endpoint}?page=${pageNumber}`);\n      let results = response.data;\n\n      // If fetching students, extract the `students` array and pagination info\n      if (endpoint === 'students') {\n        results = response.data.students;\n        setTotalPages(response.data.totalPages); // Set total pages\n      }\n      if (results.length > 0) {\n        setColumns(Object.keys(results[0]).filter(col => col !== 'createdAt' && col !== 'updatedAt')); // Exclude timestamps\n      }\n      setData(results);\n      setTitle(title);\n      setActiveTab(endpoint);\n      setPage(pageNumber);\n    } catch (error) {\n      console.error(`Error fetching ${endpoint}:`, error);\n      setData([]);\n      setColumns([]);\n      setTitle(`Error loading ${title}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px',\n      maxWidth: '700px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Info Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchData('students', 'Students', 1),\n        style: {\n          fontWeight: activeTab === 'students' ? 'bold' : 'normal'\n        },\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchData('courses', 'Courses'),\n        style: {\n          fontWeight: activeTab === 'courses' ? 'bold' : 'normal'\n        },\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchData('departments', 'Departments'),\n        style: {\n          fontWeight: activeTab === 'departments' ? 'bold' : 'normal'\n        },\n        children: \"Departments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          marginTop: '10px',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col.replace('_', ' ')\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(row[col]) ? row[col].map((course, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: course.url,\n                style: {\n                  display: 'block'\n                },\n                children: course.name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 53\n              }, this)) : row[col] // Render normal text fields\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: page === 1,\n          onClick: () => fetchData('students', 'Students', page - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchData('students', 'Students', index + 1),\n          style: {\n            fontWeight: page === index + 1 ? 'bold' : 'normal'\n          },\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: page === totalPages,\n          onClick: () => fetchData('students', 'Students', page + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(QueryButtons, \"wdGi14HxKxeJH+iP1a0NeT8KSSQ=\");\n_c = QueryButtons;\nexport default QueryButtons;\nvar _c;\n$RefreshReg$(_c, \"QueryButtons\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QueryButtons","_s","data","setData","columns","setColumns","title","setTitle","activeTab","setActiveTab","page","setPage","totalPages","setTotalPages","fetchData","endpoint","pageNumber","console","log","response","get","results","students","length","Object","keys","filter","col","error","style","marginLeft","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","fontWeight","border","width","marginTop","textAlign","map","index","replace","row","rowIndex","colIndex","Array","isArray","course","i","href","url","display","name","justifyContent","gap","disabled","_","_c","$RefreshReg$"],"sources":["C:/Users/Fadi_/OneDrive/School/Concordia/Courses/Active/SOEN487-WebServicesAndApplications/Assignments/a1_40183225/clientside/src/components/QueryButtons.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst QueryButtons = () => {\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [title, setTitle] = useState('Students');\n    const [activeTab, setActiveTab] = useState('students'); // Track active tab\n    const [page, setPage] = useState(1); // Track pagination\n    const [totalPages, setTotalPages] = useState(1); // Store total pages\n\n    // Function to fetch data from API\n    const fetchData = async (endpoint, title, pageNumber = 1) => {\n        try {\n            console.log(`Fetching data from: ${endpoint}, Page: ${pageNumber}`);\n            const response = await axios.get(`http://localhost:3100/api/${endpoint}?page=${pageNumber}`);\n\n            let results = response.data;\n\n            // If fetching students, extract the `students` array and pagination info\n            if (endpoint === 'students') {\n                results = response.data.students;\n                setTotalPages(response.data.totalPages); // Set total pages\n            }\n\n            if (results.length > 0) {\n                setColumns(Object.keys(results[0]).filter(col => col !== 'createdAt' && col !== 'updatedAt')); // Exclude timestamps\n            }\n\n            setData(results);\n            setTitle(title);\n            setActiveTab(endpoint);\n            setPage(pageNumber);\n        } catch (error) {\n            console.error(`Error fetching ${endpoint}:`, error);\n            setData([]);\n            setColumns([]);\n            setTitle(`Error loading ${title}`);\n        }\n    };\n\n    return (\n        <div style={{ marginLeft: '20px', maxWidth: '700px' }}>\n            <h1>Student Info Database</h1>\n\n            {/* Tab Navigation */}\n            <div style={{ marginBottom: '20px' }}>\n                <button onClick={() => fetchData('students', 'Students', 1)} style={{ fontWeight: activeTab === 'students' ? 'bold' : 'normal' }}>\n                    Students\n                </button>\n                <button onClick={() => fetchData('courses', 'Courses')} style={{ fontWeight: activeTab === 'courses' ? 'bold' : 'normal' }}>\n                    Courses\n                </button>\n                <button onClick={() => fetchData('departments', 'Departments')} style={{ fontWeight: activeTab === 'departments' ? 'bold' : 'normal' }}>\n                    Departments\n                </button>\n            </div>\n\n            <h2>{title}</h2>\n            {data.length > 0 ? (\n                <>\n                    <table border=\"1\" style={{ width: '100%', marginTop: '10px', textAlign: 'left' }}>\n                        <thead>\n                            <tr>\n                                {columns.map((col, index) => (\n                                    <th key={index}>{col.replace('_', ' ')}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((row, rowIndex) => (\n                                <tr key={rowIndex}>\n                                    {columns.map((col, colIndex) => (\n                                        <td key={colIndex}>\n                                            {/* Handle courses as an array */}\n                                            {Array.isArray(row[col]) ? (\n                                                row[col].map((course, i) => (\n                                                    <a key={i} href={course.url} style={{ display: 'block' }}>\n                                                        {course.name}\n                                                    </a>\n                                                ))\n                                            ) : (\n                                                row[col] // Render normal text fields\n                                            )}\n                                        </td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                    {/* Pagination Controls (Only for Students) */}\n                    {activeTab === 'students' && (\n                        <div style={{ marginTop: '10px', display: 'flex', justifyContent: 'center', gap: '5px' }}>\n                            <button disabled={page === 1} onClick={() => fetchData('students', 'Students', page - 1)}>\n                                Previous\n                            </button>\n\n                            {[...Array(totalPages)].map((_, index) => (\n                                <button\n                                    key={index + 1}\n                                    onClick={() => fetchData('students', 'Students', index + 1)}\n                                    style={{ fontWeight: page === index + 1 ? 'bold' : 'normal' }}\n                                >\n                                    {index + 1}\n                                </button>\n                            ))}\n\n                            <button disabled={page === totalPages} onClick={() => fetchData('students', 'Students', page + 1)}>\n                                Next\n                            </button>\n                        </div>\n                    )}\n                </>\n            ) : (\n                <p>No data available</p>\n            )}\n        </div>\n    );\n};\n\nexport default QueryButtons;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}