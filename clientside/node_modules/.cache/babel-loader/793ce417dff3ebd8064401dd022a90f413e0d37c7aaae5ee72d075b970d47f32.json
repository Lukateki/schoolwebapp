{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fadi_\\\\OneDrive\\\\School\\\\Concordia\\\\Courses\\\\Active\\\\SOEN487-WebServicesAndApplications\\\\Assignments\\\\a1_40183225\\\\clientside\\\\src\\\\components\\\\QueryButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueryButtons = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [title, setTitle] = useState('Query Results');\n  const [page, setPage] = useState(1); // Track pagination\n\n  const fetchData = async (endpoint, title, pageNumber = 1) => {\n    try {\n      console.log(`Fetching data from: ${endpoint}, Page: ${pageNumber}`);\n      const response = await axios.get(`http://localhost:3100/api/${endpoint}?page=${pageNumber}`);\n      let results = response.data;\n\n      // If fetching students, extract the `students` array\n      if (endpoint === 'students') {\n        results = response.data.students;\n      }\n      if (results.length > 0) {\n        setColumns(Object.keys(results[0])); // Dynamically get columns\n      }\n      setData(results);\n      setTitle(title);\n      setPage(pageNumber);\n    } catch (error) {\n      console.error(`Error fetching ${endpoint}:`, error);\n      setData([]);\n      setColumns([]);\n      setTitle(`Error loading ${title}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List All the Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData('departments', 'Departments'),\n      children: \"List All Departments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData('courses', 'Courses'),\n      children: \"List All Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData('students', 'Students', 1),\n      children: \"List All Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          marginTop: '20px',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row[col]\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), title === 'Students' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: page === 1,\n          onClick: () => fetchData('students', 'Students', page - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px'\n          },\n          children: [\" Page \", page, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchData('students', 'Students', page + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(QueryButtons, \"OLnJ7U9zOODaunljOQW0KvZxV2A=\");\n_c = QueryButtons;\nexport default QueryButtons;\nvar _c;\n$RefreshReg$(_c, \"QueryButtons\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QueryButtons","_s","data","setData","columns","setColumns","title","setTitle","page","setPage","fetchData","endpoint","pageNumber","console","log","response","get","results","students","length","Object","keys","error","style","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","width","marginTop","textAlign","map","col","index","row","rowIndex","colIndex","disabled","margin","_c","$RefreshReg$"],"sources":["C:/Users/Fadi_/OneDrive/School/Concordia/Courses/Active/SOEN487-WebServicesAndApplications/Assignments/a1_40183225/clientside/src/components/QueryButtons.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst QueryButtons = () => {\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [title, setTitle] = useState('Query Results');\n    const [page, setPage] = useState(1); // Track pagination\n\n    const fetchData = async (endpoint, title, pageNumber = 1) => {\n        try {\n            console.log(`Fetching data from: ${endpoint}, Page: ${pageNumber}`);\n            const response = await axios.get(`http://localhost:3100/api/${endpoint}?page=${pageNumber}`);\n\n            let results = response.data;\n\n            // If fetching students, extract the `students` array\n            if (endpoint === 'students') {\n                results = response.data.students;\n            }\n\n            if (results.length > 0) {\n                setColumns(Object.keys(results[0])); // Dynamically get columns\n            }\n\n            setData(results);\n            setTitle(title);\n            setPage(pageNumber);\n        } catch (error) {\n            console.error(`Error fetching ${endpoint}:`, error);\n            setData([]);\n            setColumns([]);\n            setTitle(`Error loading ${title}`);\n        }\n    };\n\n    return (\n        <div style={{ marginLeft: '20px' }}>\n            <h1>List All the Records</h1>\n            <button onClick={() => fetchData('departments', 'Departments')}>\n                List All Departments\n            </button>\n            <button onClick={() => fetchData('courses', 'Courses')}>\n                List All Courses\n            </button>\n            <button onClick={() => fetchData('students', 'Students', 1)}>\n                List All Students\n            </button>\n\n            <h2>{title}</h2>\n            {data.length > 0 ? (\n                <>\n                    <table border=\"1\" style={{ width: '100%', marginTop: '20px', textAlign: 'left' }}>\n                        <thead>\n                            <tr>\n                                {columns.map((col, index) => (\n                                    <th key={index}>{col}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((row, rowIndex) => (\n                                <tr key={rowIndex}>\n                                    {columns.map((col, colIndex) => (\n                                        <td key={colIndex}>{row[col]}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                    {/* Pagination Controls (Only for Students) */}\n                    {title === 'Students' && (\n                        <div style={{ marginTop: '10px' }}>\n                            <button \n                                disabled={page === 1} \n                                onClick={() => fetchData('students', 'Students', page - 1)}\n                            >\n                                Previous\n                            </button>\n                            <span style={{ margin: '0 10px' }}> Page {page} </span>\n                            <button \n                                onClick={() => fetchData('students', 'Students', page + 1)}\n                            >\n                                Next\n                            </button>\n                        </div>\n                    )}\n                </>\n            ) : (\n                <p>No data available</p>\n            )}\n        </div>\n    );\n};\n\nexport default QueryButtons;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}